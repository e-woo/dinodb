CREATE SCHEMA DINODB;

USE DINODB;

CREATE TABLE STUDENT
	(UCID				    CHAR(9)			    NOT NULL,
	Date_of_Birth		    DATE,
	Bio				        VARCHAR(150),
	FName			        VARCHAR(15)			NOT NULL,
	LName				    VARCHAR(15)			NOT NULL,
	Email				    VARCHAR(255)		NOT NULL,
	Password			    VARCHAR(255)		NOT NULL,
	AccountType			    VARCHAR(30)			DEFAULT 'Student',
	PRIMARY KEY (UCID));

CREATE TABLE CLUB_MEMBER
	(UCID				    CHAR(9)			NOT NULL,
	#ofMemberships		    INT				DEFAULT 0,
    PRIMARY KEY (UCID),
	FOREIGN KEY (UCID) REFERENCES STUDENT (UCID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE FACULTY
	(Name				    VARCHAR(15)		NOT NULL,
	PRIMARY KEY(Name));

CREATE TABLE EXTRACURRICULAR_ACTIVITY
    (Activity_ID			CHAR(9)			NOT NULL,
	Name				    VARCHAR(15)		NOT NULL,
	Description			    VARCHAR(250),
	Fee				        INT,
	Schedule			    TIME,
	InterviewRequired		INT				DEFAULT 0,
	ApplicationRequired		INT				DEFAULT 0,
	WeekCommitmentHour	    INT,
	Faculty_Name			VARCHAR(15),
	Img_file_path			VARCHAR(255)	NOT NULL,
	PRIMARY KEY(Activity_ID),
	FOREIGN KEY(Faculty_Name) REFERENCES FACULTY(Name) ON DELETE SET NULL ON UPDATE CASCADE);

CREATE TABLE CLUB
	(Activity_ID			CHAR(9)			NOT NULL,
	Discord			        VARCHAR(512),
	Instagram			    VARCHAR(512),
	PRIMARY KEY(Activity_ID),
	FOREIGN KEY(Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE	ON UPDATE CASCADE);

CREATE TABLE CLUB_EXEC
	(UCID				    CHAR(9)			NOT NULL,
	PositionName			VARCHAR(15)		DEFAULT 'Exec',
	Club_ID			        CHAR(9)			NOT NULL,
	PRIMARY KEY (UCID, Club_ID),
	FOREIGN KEY (UCID) REFERENCES STUDENT(UCID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Club_ID) REFERENCES CLUB(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE MEMBER_OF
    (Club_ID				CHAR(9)			NOT NULL,
	Member_UCID			    CHAR(9)			NOT NULL,
	PRIMARY KEY (Club_ID, Member_UCID),
	FOREIGN KEY (Club_ID) REFERENCES CLUB(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Member_UCID) REFERENCES STUDENT(UCID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE VOLUNTEERING_OPPORTUNITY
    (Activity_ID			CHAR(9)			NOT NULL,
	Location				VARCHAR(15),
	PRIMARY KEY (Activity_ID),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE VOLUNTEERS
    (Volunteer_ID			CHAR(9)			NOT NULL,
	Student_UCID			CHAR(9)			NOT NULL,
	PRIMARY KEY (Volunteer_ID, Student_UCID),
	FOREIGN KEY (Volunteer_ID) REFERENCES VOLUNTEERING_OPPORTUNITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Student_UCID) REFERENCES STUDENT(UCID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE PROGRAM
    (Activity_ID		    CHAR(9)			NOT NULL,
	Website				    VARCHAR(512),
	PRIMARY KEY (Activity_ID),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE PART_OF
	(Program_ID				CHAR(9)			NOT NULL,
	Student_UCID			CHAR(9)			NOT NULL,
	PRIMARY KEY (Program_ID, Student_UCID),
	FOREIGN KEY (Program_ID) REFERENCES PROGRAM(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (Student_UCID) REFERENCES STUDENT(UCID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE EXTRACURRICULAR_ACTIVITY_PERKS
    (Activity_ID			CHAR(9)			NOT NULL,
	Perk					VARCHAR(30)		NOT NULL,
	PRIMARY KEY (Activity_ID, Perk),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE BELONGS
    (FacultyName			VARCHAR(15)		NOT NULL,
	Student_UCID			CHAR(9)			NOT NULL,
	PRIMARY KEY (FacultyName, Student_UCID),
	FOREIGN KEY (FacultyName) REFERENCES FACULTY(Name) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Student_UCID) REFERENCES STUDENT(UCID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE EVENT
    (Activity_ID			CHAR(9)			NOT NULL,
	Name					VARCHAR(15)		NOT NULL,
	Description				VARCHAR(250),
	Type					VARCHAR(15),
	Location				VARCHAR(15),
	Date_and_Time			DATETIME,
	PRIMARY KEY (Activity_ID, Name),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE ANNOUNCEMENT
    (Activity_ID			CHAR(9)			NOT NULL,
	Title					VARCHAR(15)		NOT NULL,
	Announcement			VARCHAR(512)	NOT NULL,
	Author					VARCHAR(30),
	Date					DATETIME,
	PRIMARY KEY (Activity_ID, Title),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE ATTENDS
    (Student_UCID			CHAR(9)			NOT NULL,
    Activity_ID				CHAR(9)			NOT NULL,
	Event_Name				VARCHAR(15)		NOT NULL,
	Sign_Up				    INT				DEFAULT 0,
	PRIMARY KEY (Student_UCID, Event_Name),
	FOREIGN KEY (Student_UCID) REFERENCES STUDENT(UCID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Activity_ID, Event_Name) REFERENCES EVENT(Activity_ID, Name) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE ANNOUNCED_BY
    (Event_ID				CHAR(9)			NOT NULL,
    Announcement_ID			CHAR(9)			NOT NULL,
    Event_Name				VARCHAR(15)		NOT NULL,
	Announcement_Title		VARCHAR(15)		NOT NULL,
	PRIMARY KEY (Event_Name, Announcement_Title),
    FOREIGN KEY (Event_ID, Event_Name) REFERENCES EVENT(Activity_ID, Name) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Announcement_ID, Announcement_Title) REFERENCES ANNOUNCEMENT(Activity_ID, Title) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE TAG
    (Tag_ID				    CHAR(9)			NOT NULL,
	Tag_Name				VARCHAR(15)		NOT NULL,
	PRIMARY KEY (Tag_ID));

CREATE TABLE ORGANIZATION
    (Org_ID				    CHAR(9)			NOT NULL,
	Org_Name				VARCHAR(15)		NOT NULL,
	PRIMARY KEY (Org_ID));

CREATE TABLE SUPERVISOR
    (Supervisor_ID			CHAR(9)			NOT NULL,
	FName				    VARCHAR(15)		NOT NULL,
    LName					VARCHAR(15)		NOT NULL,
	Email					VARCHAR(255)	NOT NULL,
	Password				VARCHAR(255)	NOT NULL,
	PRIMARY KEY (Supervisor_ID));

CREATE TABLE CATEGORIZED_BY
    (Activity_ID			CHAR(9)			NOT NULL,
	Tag_ID					CHAR(9)			NOT NULL,
	PRIMARY KEY (Activity_ID, Tag_ID),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Tag_ID) REFERENCES TAG(Tag_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE INVITES
    (Activity_ID			CHAR(9)			NOT NULL,
	Org_ID					CHAR(9)			NOT NULL,
	PRIMARY KEY (Activity_ID, Org_ID),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Org_ID) REFERENCES ORGANIZATION(Org_ID) ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE SUPERVISED_BY
    (Activity_ID			CHAR(9)			NOT NULL,
	Supervisor_ID			CHAR(9)			NOT NULL,
	PRIMARY KEY (Activity_ID, Supervisor_ID),
	FOREIGN KEY (Activity_ID) REFERENCES EXTRACURRICULAR_ACTIVITY(Activity_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (Supervisor_ID) REFERENCES SUPERVISOR(Supervisor_ID) ON DELETE CASCADE ON UPDATE CASCADE);